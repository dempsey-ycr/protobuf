// Code generated by protoc-gen-go. DO NOT EDIT.
// source: basic/legal_person.proto

package basic

import (
	fmt "fmt"
	math "math"
	"protobuf/projects/go/protocol/asset"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 法人对象
type LegalPerson struct {
	Owner                string     `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Id                   string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Type                 int32      `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Base                 *BaseLegal `protobuf:"bytes,4,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LegalPerson) Reset()         { *m = LegalPerson{} }
func (m *LegalPerson) String() string { return proto.CompactTextString(m) }
func (*LegalPerson) ProtoMessage()    {}
func (*LegalPerson) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce454aa6bbc24d19, []int{0}
}

func (m *LegalPerson) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LegalPerson.Unmarshal(m, b)
}
func (m *LegalPerson) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LegalPerson.Marshal(b, m, deterministic)
}
func (m *LegalPerson) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegalPerson.Merge(m, src)
}
func (m *LegalPerson) XXX_Size() int {
	return xxx_messageInfo_LegalPerson.Size(m)
}
func (m *LegalPerson) XXX_DiscardUnknown() {
	xxx_messageInfo_LegalPerson.DiscardUnknown(m)
}

var xxx_messageInfo_LegalPerson proto.InternalMessageInfo

func (m *LegalPerson) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *LegalPerson) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LegalPerson) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LegalPerson) GetBase() *BaseLegal {
	if m != nil {
		return m.Base
	}
	return nil
}

// -----------------------------------------------------基本信息---------------------------------------------------------//
type BaseLegal struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string               `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	BusinessLicense      *asset.DocumentStore `protobuf:"bytes,4,opt,name=businessLicense,proto3" json:"businessLicense,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BaseLegal) Reset()         { *m = BaseLegal{} }
func (m *BaseLegal) String() string { return proto.CompactTextString(m) }
func (*BaseLegal) ProtoMessage()    {}
func (*BaseLegal) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce454aa6bbc24d19, []int{1}
}

func (m *BaseLegal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseLegal.Unmarshal(m, b)
}
func (m *BaseLegal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseLegal.Marshal(b, m, deterministic)
}
func (m *BaseLegal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseLegal.Merge(m, src)
}
func (m *BaseLegal) XXX_Size() int {
	return xxx_messageInfo_BaseLegal.Size(m)
}
func (m *BaseLegal) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseLegal.DiscardUnknown(m)
}

var xxx_messageInfo_BaseLegal proto.InternalMessageInfo

func (m *BaseLegal) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BaseLegal) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *BaseLegal) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *BaseLegal) GetBusinessLicense() *asset.DocumentStore {
	if m != nil {
		return m.BusinessLicense
	}
	return nil
}

func init() {
	proto.RegisterType((*LegalPerson)(nil), "basic.LegalPerson")
	proto.RegisterType((*BaseLegal)(nil), "basic.BaseLegal")
}

func init() { proto.RegisterFile("basic/legal_person.proto", fileDescriptor_ce454aa6bbc24d19) }

var fileDescriptor_ce454aa6bbc24d19 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x49, 0x6d, 0x85, 0x66, 0x41, 0x25, 0xec, 0x21, 0x78, 0x2a, 0x8b, 0x87, 0x9e, 0xb2,
	0xa0, 0x77, 0x0f, 0xe2, 0x71, 0x0f, 0x12, 0x1f, 0x60, 0x99, 0x76, 0x87, 0x35, 0xd0, 0x4c, 0x4a,
	0x27, 0x8b, 0xf8, 0x0c, 0xbe, 0xb4, 0x74, 0xba, 0xf4, 0xe0, 0x25, 0xcc, 0xff, 0xcf, 0xcc, 0xff,
	0x25, 0xd1, 0xb6, 0x03, 0x0e, 0xfd, 0x7e, 0xc0, 0x33, 0x0c, 0xc7, 0x11, 0x27, 0x4e, 0xe4, 0xc6,
	0x29, 0xe5, 0x64, 0x2a, 0xe9, 0x3c, 0x5a, 0x60, 0xc6, 0xbc, 0x97, 0xf3, 0x18, 0x81, 0xe0, 0x8c,
	0xcb, 0xc0, 0x2e, 0xea, 0xcd, 0x61, 0x5e, 0xfb, 0x90, 0x2d, 0xb3, 0xd5, 0x55, 0xfa, 0x26, 0x9c,
	0xac, 0x6a, 0x54, 0x5b, 0xfb, 0x45, 0x98, 0x3b, 0x5d, 0x84, 0x93, 0x2d, 0xc4, 0x2a, 0xc2, 0xc9,
	0x18, 0x5d, 0xe6, 0x9f, 0x11, 0xed, 0x4d, 0xa3, 0xda, 0xca, 0x4b, 0x6d, 0x9e, 0x74, 0xd9, 0x01,
	0xa3, 0x2d, 0x1b, 0xd5, 0x6e, 0x9e, 0x1f, 0x9c, 0x80, 0xdd, 0x1b, 0x30, 0x4a, 0xbe, 0x97, 0xee,
	0xee, 0x57, 0xe9, 0x7a, 0xf5, 0xe6, 0x1c, 0x82, 0x88, 0x57, 0x98, 0xd4, 0xf3, 0x0d, 0xc6, 0xaf,
	0x44, 0x78, 0xc5, 0x2d, 0x62, 0x76, 0x31, 0x42, 0x18, 0x04, 0x59, 0xfb, 0x45, 0x98, 0x57, 0x7d,
	0xdf, 0x5d, 0x38, 0x10, 0x32, 0x1f, 0x42, 0x8f, 0xb4, 0xe2, 0xb7, 0x4e, 0x9e, 0xea, 0xde, 0x53,
	0x7f, 0x89, 0x48, 0xf9, 0x33, 0xa7, 0x09, 0xfd, 0xff, 0xe1, 0xee, 0x56, 0xfe, 0xe0, 0xe5, 0x2f,
	0x00, 0x00, 0xff, 0xff, 0x36, 0x35, 0xd1, 0x11, 0x40, 0x01, 0x00, 0x00,
}
